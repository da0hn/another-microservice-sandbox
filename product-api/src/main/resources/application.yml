server:
  port: ${PORT:8080}
  servlet:
    context-path: /api/product-service
spring:
  application:
    name: product-api

  main:
    allow-bean-definition-overriding: true

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:35433}/product-db
    username: postgres
    password: postgres
    tomcat:
      max-active: 3

  jpa:
    hibernate:
      ddl-auto: create-drop
      format_sql: true
    show-sql: true
    database: postgresql
    open-in-view: true

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USER:root}
    password: ${RABBITMQ_PASS:root}

app-config:
  services:
    sales: http://${SALES_HOST:localhost}:${SALES_PORT:8081}/api/sales-service
  
  secrets:
    api-secret: ${API_SECRET:YXV0aC1hcGkgc2VjcmV0IGRldiAxMjM0NTY=}
  rabbit:

    exchange:
      product: product.topic

    routing-key:
      product-stock: product-stock-update.routing-key
      sales-confirmation: sales-confirmation.routing-key

    queue:
      product-stock: product-stock-update.queue
      sales-confirmation: sales-confirmation.queue

